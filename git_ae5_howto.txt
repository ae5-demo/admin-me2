- AE5 uses git backend gitea by default, but can be configured with github, bitbucket and gitlab
- every session is a new branch with <username>-<sessionid> and it is stored in $TOOL_PROJECT_BRANCH
- commits are lockal to the session (pod) and are not persistend when session is stopped it is lost - we are planning to add persistent NFS session to address this.
- to save your work you need to push the changes to the remote git server
- when using the UI, the push is done from the session branch to the origin master branch - this keeps all changes "merged" into master, but does not allow any conflict resolution in the UI
- this is done with git push origin HEAD:master # (current git head on this local branch to the remote master branch)
- however, if one would like a different workflow, and will prefare commiting to the feature (i.e. session branch) you could ```git add . ; git commit -m message ; git push origin``` which will update the branch on the remote.
- then create the pull request or whatever... on the server / from other clients etc..
- todo: test if other users can pull from this branch...

 

- if using external git, the credentials are stored in /var/run/credentials/<someid>
- the following will configure your git remote with your credentials so you can push from commandline
```[[ $(command -v jq) ]] || conda install -c https://conda.anaconda.org/conda-forge jq                # make sure we have JQ
   TMP=$(find /var/run/secrets/credentials/ -type f | xargs jq -r '"https://\(.username):\(.token)"') # get user/pass from secretes - need to make sure that this is only for the git... 
   git remote set-url origin $TMP@$(git config -l | grep -Po 'remote.origin.url=https://\K(.*)')
   unset TMP
  
 ```


# configue git cli to use stored credentials
git config --global credential.helper 'store --file ../config/git-credentials'

# git comletion
source <(curl -s -L https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash )


# Insttall gh and configure authentication - to get open "pull request on git hub" support
sudo yum install -y https://github.com/cli/cli/releases/download/v0.6.2/gh_0.6.2_linux_amd64.rpm
mkdir  -p ~/.config/gh
cat ../config/git-credentials | sed -e 's#https://##' -e "s#@#:#" | awk -F: '{print $3":\n  - user: "$1"\n    oauth_token: "$2}' > ~/.config/gh/config.yml


# # Demo of using command line
# git checkout -b new feature
# # do some work...
# echo test > test && git add test
# git status
# git commit -m "change has been made"
# git push origin feature1
# git request-pull -p master ./

# # without gh cli you can now go to the git server UI and generate a PR (in github case)
#  git config remote.origin.url

# # create a pr with gh pr create (https://github.com/cli/cli)
# gh pr create 

